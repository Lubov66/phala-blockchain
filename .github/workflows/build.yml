name: Build and Test (Gramine)

on:
  push:
    branches: [ master ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-core:
    name: Build core
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
      - uses: ./.github/actions/build-core
  build-pruntime:
    name: Build pruntime
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
      - uses: ./.github/actions/build-pruntime
  build-prouter:
    name: Build prouter
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'
      - uses: ./.github/actions/build-prouter
  e2e-test:
    name: Run E2E tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: ./.github/actions/install_toolchain
      - name: Install gramine
        run: sudo bash dockerfile.d/01_apt_gramine.sh
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install yarn 2
        run: sudo npm install -g yarn && yarn set version berry
      - name: Download core-blockchain binaries
        uses: actions/download-artifact@v3
        with:
          name: core-blockchain-binaries
          path: ./target/release
      - name: Download pruntime binaries
        uses: actions/download-artifact@v3
        with:
          name: pruntime-binaries
          path: ./standalone/pruntime/bin
      - name: Change permission
        run: chmod +x ./target/release/phala-node ./target/release/pherry ./standalone/pruntime/bin/pruntime
      - name: Run E2E tests
        run: yarn set version berry && cd ./e2e/ && YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn && yarn test
      - name: Pack logs if failed
        if: failure()
        run: tar czvf e2e-logs.tar.gz e2e
      - name: Upload logs if failed
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-logs
          path: e2e-logs.tar.gz
    needs: [ build-core, build-pruntime ]

  cargo-tests:
    name: Run cargo tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: ./.github/actions/install_toolchain
      - name: Run cargo tests
        run: cargo test -vv --workspace --exclude node-executor --exclude phala-node

  cargo-clippy:
    name: Run cargo clippy
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - uses: ./.github/actions/install_toolchain
      - name: Install clippy
        run: rustup component add clippy
      - name: Run cargo clippy
        run: cargo clippy --tests -- -D warnings && cd standalone/pruntime && cargo clippy --tests -- -D warnings
